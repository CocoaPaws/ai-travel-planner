/* app/globals.css (修正版) */

/*
 * ====================================================================
 * 现代 CSS 重置 (Modern CSS Reset)
 * 这是解决布局问题的核心部分。
 * ====================================================================
 */

/* 
 * 1. 使用更直观的 border-box 盒模型。
 *    这能确保元素的 padding 和 border 不会增加其最终计算出的尺寸。
 */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* 
 * 2. 移除所有元素的默认 margin 和 padding (可选但推荐)。
 *    这能让您对间距有更精确的控制。
 */
* {
  margin: 0;
  padding: 0;
}

/*
 * 3. 允许元素的宽度和高度根据内容自然伸缩。
 */
html,
body {
  height: 100%;
}

/*
 * ====================================================================
 * 您的项目全局样式
 * ====================================================================
 */

/* 1. 定义全局颜色变量 */
:root {
  --color-base: #F7F7F5;
  --color-surface: #FFFFFF;
  --color-primary: #4A90E2;
  --color-text-primary: #1A1A1A;
  --color-text-secondary: #7A7A7A;
  --color-border: #EAEAEA;
}

/* 2. 定义 body 的基础样式 */
body {
  line-height: 1.5; /* 增加行高，提升可读性 */
  -webkit-font-smoothing: antialiased; /* 在 Webkit 浏览器中优化字体渲染 */
  background-color: var(--color-base);
  color: var(--color-text-primary);
  /* 使用您之前选择的字体栈 */
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji";
}

/* 3. 全局动画 (保持不变) */
.animate-fade-in {
  animation: fadeIn 0.5s ease-in-out forwards;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}